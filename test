#/bin/bash

docker kill sidekiq admin api redis db
$(aws ecr get-login --profile uvc --no-include-email)

docker network inspect app-network &>/dev/null || docker network create app-network

docker pull 836563996951.dkr.ecr.us-east-2.amazonaws.com/uvc-admin:integration
docker pull 836563996951.dkr.ecr.us-east-2.amazonaws.com/uvc-api:staging
docker pull 836563996951.dkr.ecr.us-east-2.amazonaws.com/uvc-sidekiq:staging
docker pull redis:4.0-alpine
docker pull postgres:11

docker run --rm -it -d -p 5432:5432 --env-file .env --name db --network app-network postgres:11
docker run --rm -it -d -p 6379:6379 --env-file .env --name redis --network app-network redis:4.0-alpine
docker run --rm -it -d -p 3001:3001 --env-file .env --name api --network app-network 836563996951.dkr.ecr.us-east-2.amazonaws.com/uvc-api:staging
docker run --rm -it -d -p 3000:80 -p 443:443 --name admin --network app-network 836563996951.dkr.ecr.us-east-2.amazonaws.com/uvc-admin:integration
docker run --rm -it -d --env-file .env --name sidekiq --network app-network 836563996951.dkr.ecr.us-east-2.amazonaws.com/uvc-sidekiq:staging

docker system prune -f

docker exec -it api bundle exec rake db:create
docker exec -it api bundle exec rake test_data:populate_set_1

docker run -it -v $PWD:/e2e -w /e2e --network="host" cypress/included:3.2.0
